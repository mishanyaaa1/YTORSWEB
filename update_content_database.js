const { initialAboutContent } = require('./src/data/initialData.js');
const sqlite3 = require('sqlite3');
const path = require('path');

const dbPath = path.join(__dirname, 'server', 'db.sqlite3');
const db = new sqlite3.Database(dbPath);

console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function updateContent() {
  return new Promise((resolve, reject) => {
    const contentData = {
      aboutContent: initialAboutContent
    };

    const sql = `
      INSERT OR REPLACE INTO site_content (key, data, created_at, updated_at)
      VALUES (?, ?, datetime('now'), datetime('now'))
    `;

    db.run(sql, ['aboutContent', JSON.stringify(contentData.aboutContent)], function(err) {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', err);
        reject(err);
      } else {
        console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        console.log('üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:');
        console.log('  - –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞');
        console.log('  - –ö–æ–Ω—Ç–∞–∫—Ç—ã');
        console.log('  - –ö–æ–º–∞–Ω–¥–∞');
        console.log('  - –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å');
        console.log('  - –ò—Å—Ç–æ—Ä–∏—è');
        console.log('  - –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞');
        resolve();
      }
    });
  });
}

// –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
updateContent()
  .then(() => {
    console.log('üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!');
    db.close();
  })
  .catch((error) => {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    db.close();
    process.exit(1);
  });
