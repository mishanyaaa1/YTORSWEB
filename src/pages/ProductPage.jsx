import React, { useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { FaArrowLeft, FaShoppingCart, FaCheckCircle, FaTimesCircle, FaChevronLeft, FaChevronRight, FaStar, FaTruck, FaShieldAlt, FaTools } from 'react-icons/fa';
import { motion } from 'framer-motion';
import Reveal from '../components/Reveal';
import { useCartActions } from '../hooks/useCartActions';
import { useAdminData } from '../context/AdminDataContext';
import { migrateProductImages, getAllImages, isImageUrl } from '../utils/imageHelpers';
import BrandMark from '../components/BrandMark';
import './ProductPage.css';

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–∞)
const productsData = {
  1: {
    id: 1,
    title: '–ì—É—Å–µ–Ω–∏—Ü—ã –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–∞',
    price: 45000,
    originalPrice: 50000,
    category: '–•–æ–¥–æ–≤–∞—è',
    brand: '–í–µ–∑–¥–µ—Ö–æ–¥-–ú–∞—Å—Ç–µ—Ä',
    available: true,
    inStock: 12,
    icon: 'üîó',
    images: ['/api/placeholder/600/400', '/api/placeholder/600/400', '/api/placeholder/600/400'],
    description: '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≥—É—Å–µ–Ω–∏—Ü—ã –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–æ–∫. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –∏–∑ –ø—Ä–æ—á–Ω–æ–π —Ä–µ–∑–∏–Ω—ã —Å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–º–∏ –≤—Å—Ç–∞–≤–∫–∞–º–∏. –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –æ—Ç–ª–∏—á–Ω–æ–µ —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –Ω–∞ –ª—é–±–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏.',
    specifications: {
      '–®–∏—Ä–∏–Ω–∞': '400 –º–º',
      '–î–ª–∏–Ω–∞': '2500 –º–º',
      '–ú–∞—Ç–µ—Ä–∏–∞–ª': '–†–µ–∑–∏–Ω–∞ —Å –º–µ—Ç–∞–ª–ª–æ–∫–æ—Ä–¥–æ–º',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å': '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '12 –º–µ—Å—è—Ü–µ–≤'
    },
    features: [
      '–í—ã—Å–æ–∫–∞—è –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å',
      '–û—Ç–ª–∏—á–Ω–æ–µ —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –Ω–∞ —Å–Ω–µ–≥—É –∏ –≥—Ä—è–∑–∏',
      '–ü—Ä–æ—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤'
    ]
  },
  2: {
    id: 2,
    title: '–î–≤–∏–≥–∞—Ç–µ–ª—å 2.0L',
    price: 180000,
    category: '–î–≤–∏–≥–∞—Ç–µ–ª—å',
    brand: '–¢–µ—Ö–Ω–æ–ú–æ—Ç–æ—Ä',
    available: true,
    inStock: 3,
    icon: '‚öôÔ∏è',
    images: ['/api/placeholder/600/400', '/api/placeholder/600/400'],
    description: '–ú–æ—â–Ω—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å –æ–±—ä–µ–º–æ–º 2.0 –ª–∏—Ç—Ä–∞ –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤. –û—Ç–ª–∏—á–∞–µ—Ç—Å—è –≤—ã—Å–æ–∫–æ–π —Ç–æ–ø–ª–∏–≤–Ω–æ–π —ç–∫–æ–Ω–æ–º–∏—á–Ω–æ—Å—Ç—å—é –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å—é.',
    specifications: {
      '–û–±—ä–µ–º': '2.0 –ª',
      '–ú–æ—â–Ω–æ—Å—Ç—å': '150 –ª.—Å.',
      '–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞': '–ë–µ–Ω–∑–∏–Ω',
      '–û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ': '–ñ–∏–¥–∫–æ—Å—Ç–Ω–æ–µ',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '24 –º–µ—Å—è—Ü–∞'
    },
    features: [
      '–í—ã—Å–æ–∫–∞—è –º–æ—â–Ω–æ—Å—Ç—å –∏ –∫—Ä—É—Ç—è—â–∏–π –º–æ–º–µ–Ω—Ç',
      '–≠–∫–æ–Ω–æ–º–∏—á–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞',
      '–ü—Ä–æ—Å—Ç–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
      '–ù–∞–¥–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è'
    ]
  },
  3: {
    id: 3,
    title: '–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è',
    price: 95000,
    category: '–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è',
    brand: '–í–µ–∑–¥–µ—Ö–æ–¥-–ú–∞—Å—Ç–µ—Ä',
    available: false,
    inStock: 0,
    icon: 'üîß',
    images: ['/api/placeholder/600/400'],
    description: '–ù–∞–¥–µ–∂–Ω–∞—è —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–æ–∫. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á –∏ –¥–æ–ª–≥–∏–π —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã.',
    specifications: {
      '–¢–∏–ø': '–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è',
      '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–∞—á': '6',
      '–ú–∞—Ç–µ—Ä–∏–∞–ª': '–°—Ç–∞–ª—å –≤—ã—Å–æ–∫–æ–π –ø—Ä–æ—á–Ω–æ—Å—Ç–∏',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å': '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '18 –º–µ—Å—è—Ü–µ–≤'
    },
    features: [
      '–ü–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á',
      '–í—ã—Å–æ–∫–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å',
      '–ü—Ä–æ—Å—Ç–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π'
    ]
  },
  4: {
    id: 4,
    title: '–ü–æ–¥–≤–µ—Å–∫–∞',
    price: 65000,
    category: '–•–æ–¥–æ–≤–∞—è',
    brand: '–°—É–ø–µ—Ä–¢—Ä–µ–∫',
    available: true,
    inStock: 8,
    icon: 'üõ†Ô∏è',
    images: ['/api/placeholder/600/400', '/api/placeholder/600/400'],
    description: '–£—Å–∏–ª–µ–Ω–Ω–∞—è –ø–æ–¥–≤–µ—Å–∫–∞ –¥–ª—è —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏. –ü–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç –µ–∑–¥—ã.',
    specifications: {
      '–¢–∏–ø': '–ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è',
      '–•–æ–¥': '200 –º–º',
      '–ú–∞—Ç–µ—Ä–∏–∞–ª': '–°—Ç–∞–ª—å –≤—ã—Å–æ–∫–æ–π –ø—Ä–æ—á–Ω–æ—Å—Ç–∏',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å': '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '12 –º–µ—Å—è—Ü–µ–≤'
    },
    features: [
      '–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö–æ–¥ –ø–æ–¥–≤–µ—Å–∫–∏',
      '–í—ã—Å–æ–∫–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å',
      '–ü—Ä–æ—Å—Ç–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤'
    ]
  }
};

export default function ProductPage() {
  const { productId } = useParams();
  const navigate = useNavigate();
  const { addToCartWithNotification } = useCartActions();
  const { products } = useAdminData();
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
  const product = products.find(p => p.id === parseInt(productId)) || productsData[productId];
  
  if (!product) {
    return (
      <div className="product-page">
        <div className="container">
          <div className="product-not-found">
            <h1>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
            <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ç–æ–≤–∞—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.</p>
            <button onClick={() => navigate('/catalog')} className="cta-button">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
            </button>
          </div>
        </div>
      </div>
    );
  }

  const [selectedImageIndex, setSelectedImageIndex] = useState(0);
  const [quantity, setQuantity] = useState(1);

  // –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  const productImages = getAllImages(product);
  const hasImages = productImages && productImages.length > 0;

  const handleAddToCart = () => {
    addToCartWithNotification(product, quantity);
  };

  const nextImage = () => {
    setSelectedImageIndex((prev) => (prev + 1) % productImages.length);
  };

  const prevImage = () => {
    setSelectedImageIndex((prev) => (prev - 1 + productImages.length) % productImages.length);
  };

  const hasDiscount = product.originalPrice && product.originalPrice > product.price;
  const discountPercentage = hasDiscount ? Math.round(((product.originalPrice - product.price) / product.originalPrice) * 100) : 0;

  return (
    <div className="product-page">
      <div className="container">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className="product-header">
          <button onClick={() => navigate(-1)} className="back-button">
            <FaArrowLeft />
            –ù–∞–∑–∞–¥
          </button>
          <div className="breadcrumbs">
            <span onClick={() => navigate('/catalog')} className="breadcrumb-link">–ö–∞—Ç–∞–ª–æ–≥</span>
            <span className="breadcrumb-separator">/</span>
            <span onClick={() => navigate(`/catalog?category=${product.category}`)} className="breadcrumb-link">{product.category}</span>
            <span className="breadcrumb-separator">/</span>
            <span className="breadcrumb-current">{product.title}</span>
          </div>
        </div>

        <div className="product-content">
          {/* –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
          <div className="product-gallery">
            <Reveal type="left">
              <div className="main-image-container">
                {hasImages ? (
                  <div className="main-image-wrapper">
                    <img
                      src={productImages[selectedImageIndex]}
                      alt={product.title}
                      className="main-image"
                    />
                    {productImages.length > 1 && (
                      <>
                        <button className="gallery-nav prev" onClick={prevImage}>
                          <FaChevronLeft />
                        </button>
                        <button className="gallery-nav next" onClick={nextImage}>
                          <FaChevronRight />
                        </button>
                      </>
                    )}
                  </div>
                ) : (
                  <div className="main-image-placeholder">
                    <BrandMark alt={product.title} style={{ height: 120 }} />
                  </div>
                )}
              </div>
            </Reveal>

            {/* –ú–∏–Ω–∏–∞—Ç—é—Ä—ã */}
            {hasImages && productImages.length > 1 && (
              <Reveal type="left" delay={0.1}>
                <div className="image-thumbnails">
                  {productImages.map((image, index) => (
                    <button
                      key={index}
                      className={`thumbnail ${index === selectedImageIndex ? 'active' : ''}`}
                      onClick={() => setSelectedImageIndex(index)}
                    >
                      <img src={image} alt={`${product.title} ${index + 1}`} />
                    </button>
                  ))}
                </div>
              </Reveal>
            )}
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
          <div className="product-info">
            <Reveal type="right">
              <div className="product-header-info">
                <div className="product-meta">
                  <span className="product-category">{product.category}</span>
                  {product.brand && <span className="product-brand">{product.brand}</span>}
                </div>
                
                <h1 className="product-title">{product.title}</h1>
                
                <div className="product-rating">
                  <div className="stars">
                    {[...Array(5)].map((_, i) => (
                      <FaStar key={i} className={i < 4 ? 'star filled' : 'star'} />
                    ))}
                  </div>
                  <span className="rating-text">4.8 (127 –æ—Ç–∑—ã–≤–æ–≤)</span>
                </div>
              </div>
            </Reveal>

            <Reveal type="right" delay={0.1}>
              <div className="product-pricing">
                <div className="price-container">
                  <span className="current-price">{product.price.toLocaleString()} ‚ÇΩ</span>
                  {hasDiscount && (
                    <span className="original-price">{product.originalPrice.toLocaleString()} ‚ÇΩ</span>
                  )}
                </div>
                {hasDiscount && (
                  <div className="discount-badge">
                    -{discountPercentage}%
                  </div>
                )}
              </div>
            </Reveal>

            <Reveal type="right" delay={0.2}>
              <div className="product-availability">
                <div className={`availability-status ${product.available ? 'in-stock' : 'out-of-stock'}`}>
                  {product.available ? <FaCheckCircle /> : <FaTimesCircle />}
                  <span>{product.available ? '–í –Ω–∞–ª–∏—á–∏–∏' : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}</span>
                </div>
                {product.available && product.inStock && (
                  <span className="stock-count">–û—Å—Ç–∞–ª–æ—Å—å: {product.inStock} —à—Ç.</span>
                )}
              </div>
            </Reveal>

            <Reveal type="right" delay={0.3}>
              <div className="product-description">
                <h3>–û–ø–∏—Å–∞–Ω–∏–µ</h3>
                <p>{product.description}</p>
              </div>
            </Reveal>

            <Reveal type="right" delay={0.4}>
              <div className="product-actions">
                <div className="quantity-selector">
                  <label htmlFor="quantity">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
                  <div className="quantity-controls">
                    <button
                      className="quantity-btn"
                      onClick={() => setQuantity(Math.max(1, quantity - 1))}
                      disabled={quantity <= 1}
                    >
                      -
                    </button>
                    <input
                      type="number"
                      id="quantity"
                      value={quantity}
                      onChange={(e) => setQuantity(Math.max(1, parseInt(e.target.value) || 1))}
                      min="1"
                      className="quantity-input"
                    />
                    <button
                      className="quantity-btn"
                      onClick={() => setQuantity(quantity + 1)}
                    >
                      +
                    </button>
                  </div>
                </div>

                <button
                  className="add-to-cart-btn"
                  onClick={handleAddToCart}
                  disabled={!product.available}
                >
                  <FaShoppingCart />
                  {product.available ? '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É' : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}
                </button>
              </div>
            </Reveal>

            <Reveal type="right" delay={0.5}>
              <div className="product-features">
                <h3>–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h3>
                <ul className="features-list">
                  {product.features.map((feature, index) => (
                    <li key={index} className="feature-item">
                      <FaStar className="feature-icon" />
                      {feature}
                    </li>
                  ))}
                </ul>
              </div>
            </Reveal>
          </div>
        </div>

        {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="product-details">
          <Reveal type="up">
            <div className="details-tabs">
              <div className="tab-content active" id="specifications">
                <h3 className="tab-title">
                  <FaTools />
                  –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                </h3>
                <div className="specifications-grid">
                  {Object.entries(product.specifications).map(([key, value]) => (
                    <div key={key} className="spec-item">
                      <span className="spec-label">{key}</span>
                      <span className="spec-value">{value}</span>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </Reveal>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
        <Reveal type="up">
          <div className="product-benefits">
            <div className="benefits-grid">
              <div className="benefit-item">
                <div className="benefit-icon">
                  <FaTruck />
                </div>
                <h4>–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</h4>
                <p>–î–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24-48 —á–∞—Å–æ–≤</p>
              </div>
              <div className="benefit-item">
                <div className="benefit-icon">
                  <FaShieldAlt />
                </div>
                <h4>–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞</h4>
                <p>–ü–æ–ª–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è</p>
              </div>
              <div className="benefit-item">
                <div className="benefit-icon">
                  <FaTools />
                </div>
                <h4>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
                <p>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</p>
              </div>
            </div>
          </div>
        </Reveal>
      </div>
    </div>
  );
}
