#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ PythonAnywhere
"""

import os
import shutil
import subprocess
import sys

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üöÄ {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ {description.lower()}:")
        print(f"   –ö–æ–º–∞–Ω–¥–∞: {command}")
        print(f"   –û—à–∏–±–∫–∞: {e.stderr}")
        return False

def main():
    print("üîß –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è PythonAnywhere...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js
    if not run_command("node --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js"):
        print("‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ npm
    if not run_command("npm --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ npm"):
        print("‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not run_command("npm install", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.")
        return False
    
    # –°–æ–±–∏—Ä–∞–µ–º React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if not run_command("npm run build", "–°–±–æ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ dist —Å–æ–∑–¥–∞–Ω–∞
    if not os.path.exists("dist"):
        print("‚ùå –ü–∞–ø–∫–∞ dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏.")
        return False
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É static
    print("üìÅ –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É static...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    os.makedirs("static", exist_ok=True)
    os.makedirs("static/css", exist_ok=True)
    os.makedirs("static/js", exist_ok=True)
    os.makedirs("static/assets", exist_ok=True)
    
    # –ö–æ–ø–∏—Ä—É–µ–º CSS —Ñ–∞–π–ª—ã
    for file in os.listdir("dist"):
        if file.endswith(".css"):
            shutil.copy2(f"dist/{file}", f"static/css/{file}")
            print(f"   üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω CSS —Ñ–∞–π–ª: {file}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º JS —Ñ–∞–π–ª—ã
    for file in os.listdir("dist"):
        if file.endswith(".js"):
            shutil.copy2(f"dist/{file}", f"static/js/{file}")
            print(f"   üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω JS —Ñ–∞–π–ª: {file}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫—É assets
    if os.path.exists("dist/assets"):
        for file in os.listdir("dist/assets"):
            src = f"dist/assets/{file}"
            dst = f"static/assets/{file}"
            if os.path.isfile(src):
                shutil.copy2(src, dst)
                print(f"   üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: assets/{file}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    for file in os.listdir("dist"):
        if file.endswith((".ico", ".png", ".jpg", ".jpeg", ".gif", ".svg", ".webp")):
            shutil.copy2(f"dist/{file}", f"static/{file}")
            print(f"   üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: {file}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø–∞–ø–∫—É uploads
    if os.path.exists("server/db.sqlite3"):
        shutil.copy2("server/db.sqlite3", "db.sqlite3")
        print("   üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    if os.path.exists("server/uploads"):
        if os.path.exists("uploads"):
            shutil.rmtree("uploads")
        shutil.copytree("server/uploads", "uploads")
        print("   üìÅ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –ø–∞–ø–∫–∞ uploads")
    
    print("\n‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –§–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ PythonAnywhere:")
    print("   - app.py")
    print("   - wsgi.py")
    print("   - config.py")
    print("   - requirements.txt")
    print("   - .python-version")
    print("   - db.sqlite3")
    print("   - –ø–∞–ø–∫–∞ static/")
    print("   - –ø–∞–ø–∫–∞ templates/")
    print("   - –ø–∞–ø–∫–∞ uploads/")
    
    print("\nüöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é:")
    print("1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ PythonAnywhere")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ WSGI —Ñ–∞–π–ª –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö PythonAnywhere")
    print("4. –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ wsgi.py –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
    print("5. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
