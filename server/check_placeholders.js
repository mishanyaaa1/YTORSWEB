const sqlite3 = require('sqlite3').verbose();
const db = new sqlite3.Database('./db.sqlite3');

console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–ª—É—à–µ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–ª—É—à–∫–∏ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤
db.all(`SELECT * FROM product_images WHERE 
  image_data LIKE "%placeholder%" OR 
  image_data LIKE "%no-img%" OR 
  image_data LIKE "%ytors.ru%" OR
  image_data LIKE "%no-image%" OR
  image_data LIKE "%–∑–∞–≥–ª—É—à–∫–∞%"`, (err, rows) => {
  
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', err);
  } else {
    console.log('üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–≥–ª—É—à–µ–∫:', rows.length);
    if (rows.length > 0) {
      console.log('\nüö´ –ù–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–≥–ª—É—à–∫–∏:');
      rows.forEach(row => {
        console.log(`- ID: ${row.id}, Product ID: ${row.product_id}, Image: ${row.image_data.substring(0, 100)}...`);
      });
    } else {
      console.log('‚úÖ –ó–∞–≥–ª—É—à–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
    }
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
  console.log('\nüì∏ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:');
  db.all(`SELECT p.id, p.title, pi.image_data, pi.is_main 
    FROM products p 
    LEFT JOIN product_images pi ON p.id = pi.product_id 
    ORDER BY p.id, pi.is_main DESC`, (err, rows) => {
    
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞:', err);
    } else {
      let currentProduct = null;
      rows.forEach(row => {
        if (currentProduct !== row.id) {
          console.log(`\nüì¶ ID: ${row.id} - ${row.title}`);
          currentProduct = row.id;
        }
        if (row.image_data) {
          const isMain = row.is_main ? ' (–û–°–ù–û–í–ù–û–ï)' : '';
          const preview = row.image_data.length > 50 ? row.image_data.substring(0, 50) + '...' : row.image_data;
          console.log(`   üì∑ ${preview}${isMain}`);
        } else {
          console.log(`   ‚ùå –ù–ï–¢ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô`);
        }
      });
    }
    
    db.close();
  });
});
